generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DIRECT_URL")

}

enum Plan {
  MONTHLY
  THREE_MONTHS
  SIX_MONTHS
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  name         String?
  image        String?
  plan         Plan          @default(MONTHLY)
  stripeId     String?       // Stripe Customer ID
  resumeUrl    String?       // Optional resume file URL
  interviews   Interview[]
  subscription Subscription?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Interview {
  id           String       @id @default(cuid())
  userId       String
  user         User         @relation(fields: [userId], references: [id], onDelete:Cascade)
  jobTitle     String
  companyName String?
  companyDescription String?
  resume Resume?
  questions    Question[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Resume {
  id           String     @id @default(cuid())
  interviewId  String     @unique
  interview    Interview  @relation(fields: [interviewId], references: [id], onDelete: Cascade)
  fileName String?
  content      String?    // <- Add this to store parsed resume text
  createdAt DateTime @default(now())

}

model Question {
  id           String       @id @default(cuid())
  interviewId  String
  interview    Interview    @relation(fields: [interviewId], references: [id], onDelete: Cascade)
  guidelines String?
  sampleResponse String?

  text         String       // Question text
  duration     Int?         // Duration in seconds

  createdAt    DateTime     @default(now())
}

model Subscription {
  id                String     @id @default(cuid())
  userId            String     @unique
  user              User       @relation(fields: [userId], references: [id])
  plan              Plan
  stripeSubId       String     @unique
  stripePriceId     String
  status            String
  currentPeriodEnd  DateTime
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt
}
